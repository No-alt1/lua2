local teamCheck = false
local fov = 250  -- Set initial FOV circle radius to 250
local smoothing = 1  -- Initial smoothing value for aimbot set to 1
local aimbotEnabled = false
local fovCircleEnabled = false
local rgbEffectEnabled = false  -- Start with RGB effect disabled (can toggle manually)
local rgbDelay = 0.2  -- Initial delay for the transition between colors (set to 0.2)
local fovColor = Color3.fromRGB(255, 128, 128) -- Default color

local rgbHue = 0  -- Start with hue at 0 (red)
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local localPlayer = game.Players.LocalPlayer
local camera = workspace.CurrentCamera

-- FOV Circle Drawing Setup
local FOVring = Drawing.new("Circle")
FOVring.Visible = false -- Start with the FOV circle hidden
FOVring.Thickness = 1.5
FOVring.Radius = fov
FOVring.Transparency = 1
FOVring.Color = fovColor
FOVring.Position = camera.ViewportSize / 2

-- Function for linear interpolation between two colors
local function lerpColor(startColor, endColor, t)
    return startColor:Lerp(endColor, t)
end

-- Function to get the closest target to the crosshair
local function getClosest(cframe)
    local ray = Ray.new(cframe.Position, cframe.LookVector).Unit
    local target = nil
    local mag = math.huge
    
    for _, v in pairs(game.Players:GetPlayers()) do
        if v.Character and v.Character:FindFirstChild("Head") and v.Character:FindFirstChild("Humanoid") and v.Character:FindFirstChild("HumanoidRootPart") and v ~= localPlayer and (v.Team ~= localPlayer.Team or not teamCheck) then
            local magBuf = (v.Character.Head.Position - ray:ClosestPoint(v.Character.Head.Position)).Magnitude
            if magBuf < mag then
                mag = magBuf
                target = v
            end
        end
    end
    
    return target
end

local loop
local function startAimbot()
    loop = RunService.RenderStepped:Connect(function()
        if aimbotEnabled then
            local pressed = UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2)
            local zz = camera.ViewportSize / 2
            
            if pressed then
                local curTar = getClosest(camera.CFrame)
                if curTar then
                    local ssHeadPoint = camera:WorldToScreenPoint(curTar.Character.Head.Position)
                    ssHeadPoint = Vector2.new(ssHeadPoint.X, ssHeadPoint.Y)
                    local targetPos = curTar.Character.Head.Position

                    -- Calculate smooth camera movement
                    local newCFrame = CFrame.new(camera.CFrame.Position, targetPos)
                    local smoothCFrame = camera.CFrame:Lerp(newCFrame, smoothing) -- Apply smoothing factor
                    camera.CFrame = smoothCFrame
                end
            end
        end

        if UserInputService:IsKeyDown(Enum.KeyCode.Delete) then
            if loop then
                loop:Disconnect()
                loop = nil
                FOVring:Remove()
            end
        end
    end)
end

-- Update FOV Circle and RGB Effect
local function updateFOVCircle()
    if fovCircleEnabled then
        FOVring.Visible = true
        FOVring.Position = camera.ViewportSize / 2
        FOVring.Radius = fov

        -- Smooth hue transition to cycle through colors if RGB effect is enabled
        if rgbEffectEnabled then
            rgbHue = (rgbHue + rgbDelay * RunService.RenderStepped:Wait()) % 1  -- Ensure hue stays between 0 and 1

            -- Create smooth color transitions based on hue values (RGB effect)
            FOVring.Color = Color3.fromHSV(rgbHue, 1, 1)  -- Max saturation and brightness for vivid colors
        else
            FOVring.Color = fovColor
        end
    else
        FOVring.Visible = false
    end
end

-- Create the library window and settings
local repo = 'https://raw.githubusercontent.com/violin-suzutsuki/LinoriaLib/main/'
local Library = loadstring(game:HttpGet(repo .. 'Library.lua'))()
local ThemeManager = loadstring(game:HttpGet(repo .. 'addons/ThemeManager.lua'))()
local SaveManager = loadstring(game:HttpGet(repo .. 'addons/SaveManager.lua'))()

local Window = Library:CreateWindow({
    Title = 'M3C Universals Aimbot',  -- Changed the title to "M3C Universals Aimbot"
    Center = true,
    AutoShow = true,
    TabPadding = 8,
    MenuFadeTime = 0.2
})

local Tabs = {
    Main = Window:AddTab('Main'),
    ['UI Settings'] = Window:AddTab('UI Settings'),
}

-- Create the "Aimbot" groupbox inside the "Main" tab
local AimbotGroupBox = Tabs.Main:AddLeftGroupbox('Aimbot')

-- Add the aimbot toggle (First Toggle)
AimbotGroupBox:AddToggle('AimbotToggle', {
    Text = 'Enable Aimbot',
    Default = false,
    Tooltip = 'Enable or disable the aimbot feature.',
    Callback = function(Value)
        aimbotEnabled = Value
        if aimbotEnabled then
            startAimbot() -- Start the aimbot if enabled
        end
    end
})

-- Add the Smoothness slider for aimbot (Slider directly under the Aimbot toggle)
AimbotGroupBox:AddSlider('AimbotSmoothnessSlider', {
    Text = 'Aimbot Smoothness',
    Default = smoothing,  -- Set the default value to 1
    Min = 0.05,
    Max = 1,
    Rounding = 2,
    Tooltip = 'Adjust the smoothness of the aimbot. Lower values result in faster, more direct movements.',
    Callback = function(Value)
        smoothing = Value
    end
})

-- Create a new group box called "FOV & RGB" below the Aimbot group box
local FovAndRgbGroupBox = Tabs.Main:AddLeftGroupbox('FOV & RGB')

-- Add the FOV Circle toggle (Second Toggle)
FovAndRgbGroupBox:AddToggle('FovCircleToggle', {
    Text = 'Enable FOV Circle',
    Default = false,
    Tooltip = 'Enable or disable the FOV circle.',
    Callback = function(Value)
        fovCircleEnabled = Value
        updateFOVCircle() -- Update the FOV circle visibility based on toggle
    end
})

-- Add the FOV slider (Slider directly under the FOV Circle toggle)
FovAndRgbGroupBox:AddSlider('FovSlider', {
    Text = 'FOV Circle Radius',
    Default = 250,  -- Set the default value to 250
    Min = 1,
    Max = 1000,
    Rounding = 0,
    Tooltip = 'Adjust the radius of the FOV circle.',
    Callback = function(Value)
        fov = Value
        updateFOVCircle() -- Update the FOV circle radius based on the slider
    end
})

-- Add RGB Effect Toggle (Third Toggle)
FovAndRgbGroupBox:AddToggle('RgbEffectToggle', {
    Text = 'Enable RGB Effect',
    Default = rgbEffectEnabled,
    Tooltip = 'Enable or disable the RGB color cycling effect on the FOV circle.',
    Callback = function(Value)
        rgbEffectEnabled = Value
        updateFOVCircle() -- Update the RGB effect based on the toggle
    end
})

-- Add the RGB Delay slider (Slider under the RGB Effect toggle)
FovAndRgbGroupBox:AddSlider('RgbDelaySlider', {
    Text = 'RGB Effect Delay (s)',
    Default = rgbDelay,  -- Set the default value to 0.2
    Min = 0.01,
    Max = 1,
    Rounding = 2,
    Tooltip = 'Adjust the delay for the RGB color transition. Lower values will make the transition faster.',
    Callback = function(Value)
        rgbDelay = Value
    end
})

-- Create the new "Additional Settings" group box
local AdditionalSettingsGroupBox = Tabs.Main:AddLeftGroupbox('Additional Settings')

-- Removed the Example Slider

-- Add a placeholder toggle (Example)
AdditionalSettingsGroupBox:AddToggle('ExampleToggle', {
    Text = 'Example Toggle',
    Default = false,
    Tooltip = 'Example toggle for additional settings.',
    Callback = function(Value)
        print("Example Toggle: " .. tostring(Value))
    end
})

-- UI Settings tab for keybindings, configurations, etc.
local MenuGroup = Tabs['UI Settings']:AddLeftGroupbox('Menu')

-- Adding a button to unload the library (for cleanup)
MenuGroup:AddButton('Unload', function() Library:Unload() end)

-- SaveManager and ThemeManager configuration
SaveManager:SetLibrary(Library)
ThemeManager:SetLibrary(Library)

SaveManager:SetFolder('MyScriptHub/specific-game')
ThemeManager:SetFolder('MyScriptHub')

-- Build the save/load config section in the UI settings tab
SaveManager:BuildConfigSection(Tabs['UI Settings'])

-- Build the theme manager UI section
ThemeManager:ApplyToTab(Tabs['UI Settings'])

-- Load autoload config if available
SaveManager:LoadAutoloadConfig()

-- Setting the watermark to be visible
Library:SetWatermarkVisibility(true)

-- Dynamically update watermark with fps and ping data
local FrameTimer = tick()
local FrameCounter = 0
local FPS = 60

local WatermarkConnection = game:GetService('RunService').RenderStepped:Connect(function()
    FrameCounter += 1
    if (tick() - FrameTimer) >= 1 then
        FPS = FrameCounter
        FrameTimer = tick()
        FrameCounter = 0
    end
    Library:SetWatermark(('M3C Hub | %s fps | %s ms'):format(math.floor(FPS), math.floor(game:GetService('Stats').Network.ServerStatsItem['Data Ping']:GetValue())))
end)

-- Unloading cleanup
Library:OnUnload(function()
    WatermarkConnection:Disconnect()
    print('Unloaded!')
    Library.Unloaded = true
end)

-- Call updateFOVCircle function and update FOV every frame
game:GetService("RunService").RenderStepped:Connect(function()
    updateFOVCircle()  -- Keep updating the RGB effect and FOV circle
end)

-- Custom Cursor Setup
local customCursor = Drawing.new("Circle")
customCursor.Visible = true
customCursor.Radius = 10  -- You can adjust the size of the cursor
customCursor.Color = Color3.fromRGB(255, 255, 255)  -- Set color to white
customCursor.Thickness = 1
customCursor.Transparency = 1  -- Fully opaque cursor

-- Update the custom cursor position
RunService.RenderStepped:Connect(function()
    local mousePosition = UserInputService:GetMouseLocation()  -- Get the current mouse position
    customCursor.Position = mousePosition  -- Update the position of the custom cursor
end)
